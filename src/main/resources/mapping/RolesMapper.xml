<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.app.mapper.RolesMapper">
	<resultMap id="BaseResultMap"
		type="com.app.model.Roles">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="description" property="description"
			jdbcType="VARCHAR" />
		<result column="role" property="role" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, description, role
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from roles
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from roles
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.app.model.Roles"
		useGeneratedKeys="true" keyProperty="id">
		insert into roles (id, description, role
		)
		values (#{id,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR},
		#{role,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.app.model.Roles"
		useGeneratedKeys="true" keyProperty="id" >
		insert into roles
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="role != null">
				role,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				#{role,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.app.model.Roles">
		update roles
		<set>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.app.model.Roles">
		update roles
		set description = #{description,jdbcType=VARCHAR},
		role = #{role,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="getRoles" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from roles
	</select>

</mapper>