<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.app.mapper.RolesMenuMapper">
	<resultMap id="BaseResultMap"
		type="com.app.model.RolesMenu">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="role" property="role" jdbcType="INTEGER" />
		<result column="menu_id" property="menuId" jdbcType="INTEGER" />
		<result column="nameList" property="namelist" jdbcType="VARCHAR" />
		<result column="idList" property="idlist" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
	</resultMap>
  <sql id="Base_Column_List" >
    id, role, menu_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from roles_menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from roles_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.app.model.RolesMenu" >
    insert into roles_menu (id, role, menu_id
      )
    values (#{id,jdbcType=INTEGER}, #{role,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.app.model.RolesMenu" >
    insert into roles_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="menuId != null" >
        menu_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.model.RolesMenu" >
    update roles_menu
    <set >
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="menuId != null" >
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.model.RolesMenu" >
    update roles_menu
    set role = #{role,jdbcType=INTEGER},
      menu_id = #{menuId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="RoleMenulist" resultMap="BaseResultMap">
	select r.role role_name, r.id role_id, r.description description,
	GROUP_CONCAT(cast(m.name as char(500)) SEPARATOR ',')
	as nameList ,
	GROUP_CONCAT(cast(m.id as char(500)) SEPARATOR ',')
	as idList from roles_menu a
	left join roles r on a.role = r.id
	left join menu m on m.id = a.menu_id
	where m.pid != 0
	group by r.id
</select>



</mapper>