<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.mapper.MenuMapper" >
  <resultMap id="BaseResultMap" type="com.app.model.Menu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, pid, component, path
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getMenuList" resultMap="BaseResultMap" parameterType="com.app.model.Menu" >
    select id,name,pid,component,path from menu
    where pid = 0
  </select>
  <select id="getMenu" resultMap="BaseResultMap">
    select id,name,pid,component,path from menu
    where pid &lt;&gt; 0
  </select>
  <select id="getMenuId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id ,name,pid,component,path from menu 
    <where>
    1=1
      <if test="id!=null">
		and pid = #{id,jdbcType=INTEGER}
	  </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.app.model.Menu" >
    insert into menu (id, name, pid, 
      component, path)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{component,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.app.model.Menu" >
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="component != null" >
        component,
      </if>
      <if test="path != null" >
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="component != null" >
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.model.Menu" >
    update menu
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="component != null" >
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.model.Menu" >
    update menu
    set name = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      component = #{component,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="roleMenuList" resultMap="BaseResultMap">
	select m.id ,m.name,m.pid,m.component,m.path from menu m
	left join roles_menu r on r.menu_id = m.id
	left join user_roles u on u.role = r.role
	where m.pid != 0 and u.username = #{username,jdbcType=VARCHAR}
	group by m.id
</select>
  
</mapper>